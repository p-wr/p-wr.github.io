{
  "name":"software-foundations",
  "deps":[],
  "pkgs":[],
  "chunks":[
    {
      "name":"sf-LF",
      "deps":[],
      "modules":{
        "LF.AltAuto":{
          "deps":[
            "Coq.Arith.Arith",
            "Coq.Lists.List",
            "LF.IndProp",
            "Coq.micromega.Lia",
            "Coq.setoid_ring.Ring"
          ]
        },
        "LF.Auto":{"deps":["Coq.micromega.Lia","LF.Maps","LF.Imp"]},
        "LF.Basics":{"deps":["Coq.Strings.String"]},
        "LF.Bib":{},
        "LF.Extraction":{
          "deps":[
            "Coq.extraction.Extraction",
            "Coq.Arith.Arith",
            "Coq.Init.Nat",
            "Coq.Arith.EqNat",
            "LF.ImpCEvalFun",
            "Coq.extraction.ExtrOcamlBasic",
            "Coq.extraction.ExtrOcamlString",
            "LF.Imp",
            "LF.ImpParser",
            "LF.Maps"
          ]
        },
        "LF.Imp":{
          "deps":[
            "Coq.Bool.Bool",
            "Coq.Init.Nat",
            "Coq.Arith.Arith",
            "Coq.Arith.EqNat",
            "Coq.micromega.Lia",
            "Coq.Lists.List",
            "Coq.Strings.String",
            "LF.Maps"
          ]
        },
        "LF.ImpCEvalFun":{
          "deps":[
            "Coq.micromega.Lia",
            "Coq.Arith.Arith",
            "Coq.Arith.PeanoNat",
            "Coq.Arith.EqNat",
            "LF.Imp",
            "LF.Maps"
          ]
        },
        "LF.ImpHugo":{
          "deps":["Coq.Strings.String","Ltac2.String","Coq.Bool.Bool","Ltac2.Bool"]
        },
        "LF.ImpParser":{
          "deps":[
            "Coq.Strings.String",
            "Coq.Strings.Ascii",
            "Coq.Arith.Arith",
            "Coq.Init.Nat",
            "Coq.Arith.EqNat",
            "Coq.Lists.List",
            "LF.Maps",
            "LF.Imp"
          ]
        },
        "LF.IndPrinciples":{"deps":["LF.ProofObjects"]},
        "LF.IndProp":{"deps":["LF.Logic","Coq.micromega.Lia","Coq.Strings.Ascii"]},
        "LF.Induction":{"deps":["LF.Basics"]},
        "LF.Lists":{"deps":["LF.Induction"]},
        "LF.Logic":{"deps":["LF.Tactics","Coq.Setoids.Setoid"]},
        "LF.Maps":{
          "deps":[
            "Coq.Arith.Arith",
            "Coq.Bool.Bool",
            "Coq.Strings.String",
            "Coq.Logic.FunctionalExtensionality",
            "Coq.Lists.List"
          ]
        },
        "LF.Poly":{"deps":["LF.Lists"]},
        "LF.Postscript":{},
        "LF.Preface":{},
        "LF.ProofObjects":{"deps":["LF.IndProp"]},
        "LF.Rel":{"deps":["LF.IndProp"]},
        "LF.Review1":{"deps":["LF.IndPrinciples"]},
        "LF.Review2":{},
        "LF.Tactics":{"deps":["LF.Poly"]}
      }
    },
    {
      "name":"sf-PLF",
      "deps":[],
      "modules":{
        "PLF.Bib":{},
        "PLF.Equiv":{
          "deps":[
            "PLF.Maps",
            "Coq.Bool.Bool",
            "Coq.Arith.Arith",
            "Coq.Init.Nat",
            "Coq.Arith.PeanoNat",
            "Coq.Arith.EqNat",
            "Coq.micromega.Lia",
            "Coq.Lists.List",
            "Coq.Logic.FunctionalExtensionality",
            "PLF.Imp"
          ]
        },
        "PLF.Equiv2":{
          "deps":[
            "PLF.Maps",
            "Coq.Bool.Bool",
            "Coq.Arith.Arith",
            "Coq.Init.Nat",
            "Coq.Arith.PeanoNat",
            "Coq.Arith.EqNat",
            "Coq.micromega.Lia",
            "Coq.Lists.List",
            "Coq.Logic.FunctionalExtensionality",
            "PLF.Imp",
            "PLF.Equiv"
          ]
        },
        "PLF.Hoare":{
          "deps":[
            "PLF.Maps",
            "Coq.Bool.Bool",
            "Coq.Arith.Arith",
            "Coq.Arith.EqNat",
            "Coq.Arith.PeanoNat",
            "Coq.micromega.Lia",
            "PLF.Imp",
            "Coq.ZArith.ZArith"
          ]
        },
        "PLF.Hoare2":{
          "deps":[
            "Coq.Strings.String",
            "PLF.Maps",
            "Coq.Bool.Bool",
            "Coq.Arith.Arith",
            "Coq.Arith.EqNat",
            "Coq.Arith.PeanoNat",
            "Coq.micromega.Lia",
            "PLF.Imp",
            "PLF.Hoare",
            "Coq.Numbers.Natural.Peano.NPeano"
          ]
        },
        "PLF.HoareAsLogic":{"deps":["PLF.Maps","PLF.Hoare"]},
        "PLF.Imp":{
          "deps":[
            "Coq.Bool.Bool",
            "Coq.Init.Nat",
            "Coq.Arith.Arith",
            "Coq.Arith.EqNat",
            "Coq.micromega.Lia",
            "Coq.Lists.List",
            "Coq.Strings.String",
            "PLF.Maps"
          ]
        },
        "PLF.LibTactics":{
          "deps":[
            "Coq.Lists.List",
            "Coq.Numbers.BinNums",
            "Coq.ZArith.BinInt",
            "Coq.Logic.ProofIrrelevance",
            "Coq.Program.Equality",
            "Coq.Arith.Compare_dec",
            "Coq.micromega.Lia"
          ]
        },
        "PLF.Maps":{
          "deps":[
            "Coq.Arith.Arith",
            "Coq.Bool.Bool",
            "Coq.Strings.String",
            "Coq.Logic.FunctionalExtensionality",
            "Coq.Lists.List"
          ]
        },
        "PLF.MoreStlc":{"deps":["PLF.Maps","PLF.Types","PLF.Smallstep","PLF.Stlc"]},
        "PLF.Norm":{
          "deps":["Coq.Lists.List","Coq.Strings.String","PLF.Maps","PLF.Smallstep"]
        },
        "PLF.PE":{
          "deps":[
            "PLF.Maps",
            "Coq.Bool.Bool",
            "Coq.Arith.Arith",
            "Coq.Arith.EqNat",
            "Coq.Arith.PeanoNat",
            "Coq.micromega.Lia",
            "Coq.Logic.FunctionalExtensionality",
            "Coq.Lists.List",
            "PLF.Smallstep",
            "PLF.Imp"
          ]
        },
        "PLF.Postscript":{},
        "PLF.Preface":{},
        "PLF.RecordSub":{"deps":["Coq.Strings.String","PLF.Maps","PLF.Smallstep"]},
        "PLF.Records":{"deps":["Coq.Strings.String","PLF.Maps","PLF.Smallstep","PLF.Stlc"]},
        "PLF.References":{
          "deps":[
            "Coq.Strings.String",
            "Coq.Init.Nat",
            "Coq.Arith.Arith",
            "Coq.Arith.PeanoNat",
            "Coq.micromega.Lia",
            "PLF.Maps",
            "PLF.Smallstep",
            "Coq.Lists.List"
          ]
        },
        "PLF.Smallstep":{
          "deps":[
            "Coq.Arith.Arith",
            "Coq.Arith.EqNat",
            "Coq.Init.Nat",
            "Coq.micromega.Lia",
            "Coq.Lists.List",
            "PLF.Maps",
            "PLF.Imp"
          ]
        },
        "PLF.Stlc":{"deps":["Coq.Strings.String","PLF.Maps","PLF.Smallstep"]},
        "PLF.StlcProp":{"deps":["PLF.Maps","PLF.Types","PLF.Stlc","PLF.Smallstep"]},
        "PLF.Sub":{
          "deps":[
            "Coq.Strings.String",
            "PLF.Maps",
            "PLF.Types",
            "PLF.Smallstep",
            "Coq.funind.Recdef"
          ]
        },
        "PLF.Typechecking":{
          "deps":["Coq.Bool.Bool","PLF.Maps","PLF.Smallstep","PLF.Stlc","PLF.MoreStlc"]
        },
        "PLF.Types":{"deps":["Coq.Arith.Arith","PLF.Maps","PLF.Smallstep","PLF.Imp"]},
        "PLF.UseAuto":{
          "deps":[
            "Coq.Arith.Arith",
            "PLF.Maps",
            "PLF.Smallstep",
            "PLF.LibTactics",
            "PLF.Stlc",
            "PLF.Imp",
            "Coq.Lists.List",
            "PLF.StlcProp",
            "Coq.Program.Program",
            "Coq.micromega.Lia",
            "PLF.References",
            "PLF.Sub",
            "Coq.ZArith.ZArith"
          ]
        },
        "PLF.UseTactics":{
          "deps":[
            "Coq.Arith.Arith",
            "PLF.Maps",
            "PLF.Stlc",
            "PLF.Types",
            "PLF.Smallstep",
            "PLF.LibTactics",
            "PLF.Equiv",
            "PLF.References",
            "PLF.Hoare",
            "PLF.Sub"
          ]
        },
        "PLF.sub_notations":{"deps":["Coq.Strings.String"]}
      }
    },
    {
      "name":"sf-VFA",
      "deps":[],
      "modules":{
        "VFA.ADT":{
          "deps":[
            "Coq.Strings.String",
            "VFA.Perm",
            "VFA.Maps",
            "VFA.SearchTree",
            "Coq.Lists.List",
            "Ltac2.List"
          ]
        },
        "VFA.BagPerm":{
          "deps":[
            "Coq.Strings.String",
            "Coq.Setoids.Setoid",
            "Coq.Classes.Morphisms",
            "VFA.Perm",
            "VFA.Sort"
          ]
        },
        "VFA.Binom":{"deps":["Coq.Strings.String","VFA.Perm","VFA.Priqueue"]},
        "VFA.Color":{
          "deps":[
            "Coq.Lists.List",
            "Ltac2.List",
            "Coq.Setoids.Setoid",
            "Coq.FSets.FSets",
            "Coq.FSets.FMaps",
            "Coq.PArith.PArith",
            "VFA.Perm",
            "Coq.funind.Recdef"
          ]
        },
        "VFA.Decide":{"deps":["VFA.Perm"]},
        "VFA.Extract":{
          "deps":[
            "VFA.Perm",
            "Coq.extraction.Extraction",
            "LF.Extraction",
            "Coq.ZArith.ZArith"
          ]
        },
        "VFA.Maps":{
          "deps":["Coq.Bool.Bool","Coq.Logic.FunctionalExtensionality","VFA.Perm"]
        },
        "VFA.Merge":{"deps":["VFA.Perm","VFA.Sort","Coq.funind.Recdef"]},
        "VFA.Multiset":{
          "deps":[
            "Coq.Strings.String",
            "Coq.Logic.FunctionalExtensionality",
            "VFA.Perm",
            "VFA.Sort"
          ]
        },
        "VFA.Perm":{
          "deps":[
            "Coq.Strings.String",
            "Coq.Bool.Bool",
            "Coq.Arith.Arith",
            "Coq.Arith.PeanoNat",
            "Coq.Arith.EqNat",
            "Coq.micromega.Lia",
            "Coq.Lists.List",
            "Coq.Sorting.Permutation"
          ]
        },
        "VFA.Preface":{},
        "VFA.Priqueue":{"deps":["VFA.Perm"]},
        "VFA.Redblack":{
          "deps":[
            "Coq.Strings.String",
            "Coq.Logic.FunctionalExtensionality",
            "Coq.ZArith.ZArith",
            "VFA.Perm",
            "VFA.Extract"
          ]
        },
        "VFA.SearchTree":{
          "deps":[
            "Coq.Strings.String",
            "Coq.Logic.FunctionalExtensionality",
            "VFA.Perm",
            "VFA.Maps",
            "VFA.Sort"
          ]
        },
        "VFA.Selection":{
          "deps":["VFA.Perm","Coq.Lists.List","Coq.funind.Recdef","VFA.Multiset"]
        },
        "VFA.Sort":{"deps":["VFA.Perm"]},
        "VFA.Trie":{
          "deps":[
            "Coq.Strings.String",
            "Coq.ZArith.ZArith",
            "Coq.PArith.PArith",
            "VFA.Perm",
            "VFA.Maps"
          ]
        }
      }
    },
    {
      "name":"sf-SLF",
      "deps":[],
      "modules":{
        "SLF.Affine":{"deps":["SLF.Rules","SLF.LibSepReference"]},
        "SLF.Basic":{"deps":["SLF.LibSepReference"]},
        "SLF.Bib":{},
        "SLF.Credits":{"deps":["SLF.LibSepReference","SLF.LibSepFunctor","SLF.LibSepFmap"]},
        "SLF.Ghost":{
          "deps":[
            "SLF.LibString",
            "SLF.LibCore",
            "SLF.LibSepTLCbuffer",
            "SLF.LibSepFmap",
            "SLF.LibSepFunctor"
          ]
        },
        "SLF.Himpl":{"deps":["SLF.LibSepReference","SLF.Hprop"]},
        "SLF.Hprop":{"deps":["SLF.LibSepReference"]},
        "SLF.LibAxioms":{},
        "SLF.LibBool":{"deps":["SLF.LibTactics","SLF.LibLogic","SLF.LibOperation"]},
        "SLF.LibChoice":{
          "deps":["SLF.LibTactics","SLF.LibLogic","SLF.LibEpsilon","SLF.LibRelation"]
        },
        "SLF.LibContainer":{"deps":["SLF.LibTactics","SLF.LibLogic","SLF.LibReflect"]},
        "SLF.LibCore":{
          "deps":[
            "SLF.LibTactics",
            "SLF.LibLogic",
            "SLF.LibOperation",
            "SLF.LibReflect",
            "SLF.LibUnit",
            "SLF.LibProd",
            "SLF.LibSum",
            "SLF.LibOption",
            "SLF.LibNat",
            "SLF.LibInt",
            "SLF.LibList",
            "SLF.LibRelation",
            "SLF.LibOrder",
            "SLF.LibWf"
          ]
        },
        "SLF.LibEpsilon":{"deps":["SLF.LibTactics","SLF.LibLogic","SLF.LibRelation"]},
        "SLF.LibEqual":{"deps":["SLF.LibTactics","SLF.LibAxioms","Coq.Logic.JMeq"]},
        "SLF.LibFix":{
          "deps":[
            "SLF.LibTactics",
            "SLF.LibLogic",
            "SLF.LibReflect",
            "SLF.LibEpsilon",
            "SLF.LibInt",
            "SLF.LibNat"
          ]
        },
        "SLF.LibFun":{
          "deps":[
            "SLF.LibTactics",
            "SLF.LibLogic",
            "SLF.LibContainer",
            "SLF.LibSet",
            "SLF.LibList"
          ]
        },
        "SLF.LibInt":{
          "deps":[
            "Coq.ZArith.ZArith",
            "SLF.LibTactics",
            "SLF.LibLogic",
            "SLF.LibReflect",
            "SLF.LibRelation",
            "SLF.LibNat"
          ]
        },
        "SLF.LibList":{
          "deps":[
            "Coq.Classes.Morphisms",
            "SLF.LibTactics",
            "SLF.LibLogic",
            "SLF.LibReflect",
            "SLF.LibOperation"
          ]
        },
        "SLF.LibListExec":{"deps":["SLF.LibTactics","SLF.LibReflect","SLF.LibList"]},
        "SLF.LibListZ":{
          "deps":[
            "SLF.LibTactics",
            "SLF.LibLogic",
            "SLF.LibOperation",
            "SLF.LibReflect",
            "SLF.LibList",
            "SLF.LibNat",
            "SLF.LibInt",
            "SLF.LibContainer"
          ]
        },
        "SLF.LibLogic":{"deps":["SLF.LibTactics","SLF.LibAxioms","SLF.LibEqual"]},
        "SLF.LibMap":{
          "deps":[
            "SLF.LibTactics",
            "SLF.LibLogic",
            "SLF.LibReflect",
            "SLF.LibOption",
            "SLF.LibContainer"
          ]
        },
        "SLF.LibMin":{
          "deps":[
            "SLF.LibTactics",
            "SLF.LibLogic",
            "SLF.LibReflect",
            "SLF.LibOperation",
            "SLF.LibNat"
          ]
        },
        "SLF.LibMonoid":{"deps":["SLF.LibTactics","SLF.LibLogic","SLF.LibOperation"]},
        "SLF.LibMultiset":{
          "deps":["SLF.LibTactics","SLF.LibLogic","SLF.LibReflect","SLF.LibContainer"]
        },
        "SLF.LibNat":{
          "deps":[
            "Coq.Arith.Arith",
            "Coq.micromega.Lia",
            "SLF.LibTactics",
            "SLF.LibReflect",
            "SLF.LibBool",
            "SLF.LibOperation",
            "SLF.LibRelation",
            "SLF.LibOrder"
          ]
        },
        "SLF.LibOperation":{"deps":["SLF.LibTactics"]},
        "SLF.LibOption":{"deps":["SLF.LibTactics","SLF.LibReflect"]},
        "SLF.LibOrder":{
          "deps":[
            "SLF.LibTactics",
            "SLF.LibLogic",
            "SLF.LibReflect",
            "SLF.LibOperation",
            "SLF.LibRelation"
          ]
        },
        "SLF.LibProd":{"deps":["SLF.LibTactics","SLF.LibLogic","SLF.LibReflect"]},
        "SLF.LibReflect":{"deps":["SLF.LibTactics","SLF.LibBool","SLF.LibLogic"]},
        "SLF.LibRelation":{
          "deps":[
            "SLF.LibTactics",
            "SLF.LibLogic",
            "SLF.LibBool",
            "SLF.LibProd",
            "SLF.LibSum",
            "SLF.LibOperation"
          ]
        },
        "SLF.LibSepFmap":{"deps":["SLF.LibCore"]},
        "SLF.LibSepFunctor":{
          "deps":[
            "SLF.LibCore",
            "SLF.LibMonoid",
            "SLF.LibSepTLCbuffer",
            "SLF.LibSepSimpl2"
          ]
        },
        "SLF.LibSepMinimal":{
          "deps":["SLF.LibString","SLF.LibCore","SLF.LibSepTLCbuffer","SLF.LibSepFmap"]
        },
        "SLF.LibSepMoreTriples":{
          "deps":[
            "SLF.LibCore",
            "SLF.LibSepTLCbuffer",
            "SLF.LibSepVar",
            "SLF.LibSepFmap",
            "SLF.LibChoice",
            "SLF.LibSepReference"
          ]
        },
        "SLF.LibSepReference":{
          "deps":[
            "SLF.LibCore",
            "SLF.LibSepTLCbuffer",
            "SLF.LibSepVar",
            "SLF.LibSepFmap",
            "SLF.LibSepSimpl"
          ]
        },
        "SLF.LibSepSimpl":{"deps":["SLF.LibCore","SLF.LibSepTLCbuffer"]},
        "SLF.LibSepSimpl2":{"deps":["SLF.LibCore","SLF.LibSepTLCbuffer"]},
        "SLF.LibSepTLCbuffer":{"deps":["SLF.LibInt"]},
        "SLF.LibSepTyping":{"deps":["SLF.Partial"]},
        "SLF.LibSepVar":{
          "deps":[
            "SLF.LibListExec",
            "SLF.LibString",
            "SLF.LibList",
            "SLF.LibCore",
            "SLF.LibSepFmap",
            "SLF.LibSepTLCbuffer"
          ]
        },
        "SLF.LibSepWpgenSummary":{
          "deps":["SLF.LibSepReference","SLF.Rules","SLF.WPgen","SLF.Basic","SLF.Repr"]
        },
        "SLF.LibSet":{
          "deps":[
            "Coq.Classes.Morphisms",
            "SLF.LibTactics",
            "SLF.LibLogic",
            "SLF.LibReflect",
            "SLF.LibList",
            "SLF.LibContainer"
          ]
        },
        "SLF.LibString":{"deps":["SLF.LibTactics","SLF.LibReflect","Coq.Strings.String"]},
        "SLF.LibSum":{"deps":["SLF.LibTactics","SLF.LibLogic","SLF.LibBool"]},
        "SLF.LibTactics":{
          "deps":[
            "Coq.Lists.List",
            "Coq.Numbers.BinNums",
            "Coq.ZArith.BinInt",
            "Coq.Logic.ProofIrrelevance",
            "Coq.Program.Equality",
            "Coq.Arith.Compare_dec",
            "Coq.micromega.Lia"
          ]
        },
        "SLF.LibUnit":{"deps":["SLF.LibTactics","SLF.LibLogic","SLF.LibReflect"]},
        "SLF.LibWf":{"deps":["SLF.LibTactics","SLF.LibLogic"]},
        "SLF.Nondet":{"deps":["SLF.LibSepReference"]},
        "SLF.Partial":{"deps":["SLF.Nondet"]},
        "SLF.Postscript":{},
        "SLF.Preface":{},
        "SLF.Repr":{"deps":["SLF.LibSepReference","SLF.Basic"]},
        "SLF.Rich":{
          "deps":["SLF.LibSepReference","SLF.LibSepTLCbuffer","SLF.Basic","SLF.Repr"]
        },
        "SLF.Rules":{"deps":["SLF.LibSepReference","SLF.Basic"]},
        "SLF.Struct":{"deps":["SLF.LibSepReference","SLF.LibSepTLCbuffer"]},
        "SLF.WPgen":{"deps":["SLF.WPsem"]},
        "SLF.WPsem":{"deps":["SLF.Rules"]},
        "SLF.Wand":{"deps":["SLF.LibSepReference","SLF.Repr"]}
      }
    }
  ]
}